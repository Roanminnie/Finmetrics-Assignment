print(Sharpe)
View(Sharpe)
View(Sharpe)
View(Sharpe)
View(data)
View(Sharpe)
Financial <- data %>%
filter(BICS_LEVEL_1_SECTOR_NAME %in% "Financials")
View(Financial)
if (!require("rmsfuns")) install.packages("rmsfuns")
if (!require("devtools")) install.packages("devtools")
library(rmsfuns)
library(tidyverse)
load_pkg("ggplot2")
#Start by caculating the financial returns per country
Financial <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME %in% "Financials") %>%
group_by(Ticker) %>%
mutate(Returns = TRI/lag(TRI) - 1) %>% ungroup() %>%
mutate(Returns = coalesce(Returns, 0)) %>%
group_by(Universe) %>%
mutate(Cum_Return = cumprod(1 + Returns)) %>%  ungroup()
#plot the returns
Cumreturns <- Financial %>% gather(key = Universe, value = Cum_Return, -date)
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
View(Financial)
if (!require("rmsfuns")) devtools::install_github("Nicktz/rmsfuns")
if (!require("devtools")) install.packages("devtools")
library(rmsfuns)
library(tidyverse)
load_pkg("tidyverse")
load_pkg("ggplot2")
#Start by caculating the financial returns per country
Financial <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME %in% "Financials") %>%
group_by(Ticker) %>%
mutate(Returns = TRI/lag(TRI) - 1) %>% ungroup() %>%
mutate(Returns = coalesce(Returns, 0)) %>%
group_by(Universe) %>%
mutate(Cum_Return = cumprod(1 + Returns)) %>%  ungroup()
#plot the returns
Cumreturns <- Financial %>% gather(key = Universe, value = Cum_Return, -date)
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
View(Sharpe)
View(Financial)
if (!require("rmsfuns")) devtools::install_github("Nicktz/rmsfuns")
if (!require("devtools")) install.packages("devtools")
library(rmsfuns)
library(tidyverse)
load_pkg("tidyverse")
load_pkg("ggplot2")
library(rmsfuns)
load_pkg("readr")
rmsfuns::load_pkg("ggthemes")
View(Financial)
Cumreturns <- Financial %>% select(date, Universe, Cum_Return)
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
View(Cumreturns)
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
rmsfuns::load_pkg("ggthemes")
Cumreturns <- Financial %>% select(date, Universe, Cum_Return) %>% gather(key = Universe, value = Cum_Return, -date)
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
?summarise
Cumreturns <- Financial %>% select(date, Universe, Cum_Return) %>% group_by(Universe)
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
View(Cumreturns)
Cumreturns <- Financial %>% select(date, Universe, Cum_Return) %>% ungroup()
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
Cumreturns <- Financial %>% select(date, Universe, Cum_Return) %>% ungroup()
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
rmsfuns::load_pkg("ggthemes")
Cumreturns <- Financial %>% select(Universe, Cum_Return) %>% ungroup()
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
Cumreturns <- Financial %>% select(Universe, Cum_Return) %>% ungroup()
ggplot(data = Cumreturns) + geom_line(aes(y = Cum_Return, colour = Universe))
View(Cumreturns)
View(Financial)
View(Financial)
Cumreturns <- Financial %>% select(date, Returns, Universe)
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Returns, colour = Universe))
Cumreturns <- Financial %>% select(date, Cum_Return, Universe)
ggplot(data = Cumreturns) + geom_line(aes(x = date, y = Cum_Return, colour = Universe))
View(Financial)
View(monthly_returns)
View(data)
View(Tidydata)
Tidydata %>%
filter("JALSH" %in% Universe)
Tidydata %>%
filter(Universe %in% "JALSH")
Tidydata %>%
filter(Universe = "JALSH")
Tidydata %>%
filter(Universe == "JALSH")
View(Sharpe)
Tidydata %>%
filter(Universe == "JALSHAII")
unique(Universe)
Universe == unique()
View(Tidydata)
Tidydata %>%
filter(Universe == "JALSHAll")
View(Tidydata)
jalsh <- Tidydata %>%
filter(Universe == "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup()
View(jalsh)
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe == "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>%
group_by(Ticker)
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe == "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>% group_by(date)
View(jalsh)
str(Ticker)
str(jalsh$Ticker)
str(Tidydata$Universe)
unique(Tidydata$Universe)
unique(jalsh$Ticker)
filter(Ticker == unique(jalsh$Ticker))
jalsh <- Tidydata %>%
filter(Universe == "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>%
#Now filter the dataset so that you only have one observation per ticker
filter(Ticker == unique(jalsh$Ticker))
jalsh <- Tidydata %>%
filter(Universe == "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>%
#Now filter the dataset so that you only have one observation per ticker
filter(Ticker %in% unique(jalsh$Ticker))
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe == "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>%
#Now filter the dataset so that you only have one observation per ticker
filter(Market.Cap %in% unique(Market.Cap))
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe == "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>%
#Now filter the dataset so that you only have one observation per ticker
filter(Market.Cap == unique(Market.Cap))
View(jalsh)
if (!require("rmsfuns")) devtools::install_github("Nicktz/rmsfuns")
if (!require("devtools")) install.packages("devtools")
library(rmsfuns)
library(tidyverse)
load_pkg("tidyverse")
load_pkg("ggplot2")
library(rmsfuns)
load_pkg("readr")
View(data)
Tidydata <- data %>%
mutate(Year_Month = format(date, "%Y%B")) %>%
group_by(Year_Month, Market.Cap) %>%
mutate(N_Obs = n(), N_NA = sum(is.na(Market.Cap)) )#
View(Tidydata)
View(Financial)
Tidydata <- data %>%
mutate(Year_Month = format(date, "%Y%B")) %>%
group_by(Year_Month, Market.Cap) %>%
mutate(N_Obs = n(), N_NA = sum(is.na(Market.Cap)) ) %>% filter( N_Obs != N_NA) %>% ungroup() %>% select(date, Ticker,TRI, Short.Name, Market.Cap, BICS_LEVEL_1_SECTOR_NAME, Universe, Year_Month)
Tidydata <- data %>%
mutate(Year_Month = format(date, "%Y%B")) %>%
group_by(Year_Month, Market.Cap) %>%
mutate(N_Obs = n(), N_NA = sum(is.na(Market.Cap)) ) %>% filter( N_Obs != N_NA) %>% ungroup() %>% select(date, Ticker,TRI, Short.Name, Market.Cap, BICS_LEVEL_1_SECTOR_NAME, Universe, Year_Month)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date)
View(jalsh)
View(monthly_returns)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
group_by(BICS_LEVEL_1_SECTOR_NAME, Universe, date) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup()
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
group_by(Year_Month) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup()
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
group_by(Year_Month) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>%
#Now filter the dataset so that you only have one observation per ticker
filter(date == "2017-01-02")
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
group_by(Year_Month) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>%
#Now filter the dataset so that you only have one observation per ticker
filter(date == "2017-01-02") %>%
arrange(MC_weight)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
group_by(Year_Month) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
ungroup() %>%
#Now filter the dataset so that you only have one observation per ticker
filter(date == "2017-01-02") %>%
arrange(MC_weight) %>%
mutate(CumSum = cumsum(MC_weight))
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
group_by(Year_Month) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>% ungroup() %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
#Now filter the dataset so that you only have one observation per ticker
filter(date == "2017-01-02") %>%
arrange(MC_weight) %>%
mutate(CumSum = cumsum(MC_weight))
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
group_by(Year_Month) %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>% ungroup() %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
#Now filter the dataset so that you only have one observation per ticker
filter(date == "2017-01-02") %>%
arrange(MC_weight) %>%
mutate(CumSum = cumsum(MC_weight))
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(date == "2017-01-02") %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>% ungroup() %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
#Now filter the dataset so that you only have one observation per ticker
arrange(MC_weight) %>%
mutate(CumSum = cumsum(MC_weight))
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(date == "2017-01-02") %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>% ungroup() %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
#Now filter the dataset so that you only have one observation per ticker
arrange(desc(MC_weight)) %>%
mutate(CumSum = cumsum(MC_weight))
View(jalsh)
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(date == "2017-01-02") %>%
#calculate market cap shares per sector
mutate(Tot_MC = sum(Market.Cap)) %>% ungroup() %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
#Now filter the dataset so that you only have one observation per ticker
arrange(desc(MC_weight)) %>%
mutate(CumSum = cumsum(MC_weight)) %>%
filter(CumSum <= 0.95)
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(date == "2017-01-02") %>%
#calculate market cap shares per ticker
mutate(Tot_MC = sum(Market.Cap))# %>% ungroup() %>%
View(jalsh)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(date == "2017-01-02") %>%
#calculate market cap shares per ticker
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
#filter out the top 95%
arrange(desc(MC_weight)) %>%
mutate(CumSum = cumsum(MC_weight)) %>%
filter(CumSum <= 0.95)
tickers <- list(jalsh$Ticker)
View(tickers)
View(tickers)
tickers[[1]
View(Cumreturns)
View(Cumreturns)
tickers <- list(jalsh$Ticker)
#calculate the index returns
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers)
View(jalsh_ret)
View(tickers)
tickers <- c(jalsh$Ticker)
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers)
View(jalsh_ret)
View(Financial)
View(jalsh_ret)
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(date == "2017-01-02") %>%
#calculate market cap shares per ticker
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
#filter out the top 95%
arrange(desc(MC_weight)) %>%
mutate(CumSum = cumsum(MC_weight)) %>%
filter(CumSum <= 0.95)
#create a list with the relevant tickers
tickers <- c(jalsh$Ticker)
#create a new dataframe containing the tickers identified above
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers) %>%
#calculate the index returns
group_by(Ticker) %>%
mutate(Returns = TRI/lag(TRI) - 1) %>%
mutate(Returns = coalesce(Returns, 0)) %>%
mutate(Cum_Return = cumprod(1 + Returns))
View(jalsh_ret)
View(jalsh_ret)
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers) %>%
#calculate the index returns
group_by(date) %>%
mutate(Returns = TRI/lag(TRI) - 1) %>%
mutate(Returns = coalesce(Returns, 0)) %>%
mutate(Cum_Return = cumprod(1 + Returns))
View(jalsh_ret)
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers) %>%
#calculate the index returns
group_by(date) %>%
mutate(Daily_indexsum = sum(TRI))
View(monthly_returns)
View(jalsh)
View(jalsh_ret)
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers) %>%
#calculate the index returns
group_by(date) %>%
mutate(Daily_indexsum = sum(TRI)) %>%
arrange(date)
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers) %>%
#calculate the index returns
group_by(date) %>%
mutate(Daily_indexsum = sum(TRI)) %>%
arrange(date) %>%
select(date,Universe, Daily_indexsum, Year_Month) %>% ungroup() %>%
group_by(Year_Month) %>%
filter(date == last(date))
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers) %>%
#calculate the index returns
group_by(date) %>%
mutate(Daily_indexsum = sum(TRI)) %>%
arrange(date) %>%
select(date,Universe, Daily_indexsum, Year_Month) %>% ungroup() %>%
unique.data.frame()
jalsh <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(date == "2017-01-02") %>%
#calculate market cap shares per ticker
mutate(Tot_MC = sum(Market.Cap)) %>%
mutate(MC_weight = Market.Cap/Tot_MC) %>%
#filter out the top 95%
arrange(desc(MC_weight)) %>%
mutate(CumSum = cumsum(MC_weight)) %>%
filter(CumSum <= 0.95)
#create a list with the relevant tickers
tickers <- c(jalsh$Ticker)
#create a new dataframe containing the tickers identified above
jalsh_ret <- Tidydata %>%
filter(Universe %in% "JALSHAll") %>%
filter(Ticker %in% tickers) %>%
#calculate the sum of the daily returns in the index
group_by(date) %>%
mutate(Daily_indexsum = sum(TRI)) %>%
arrange(date) %>%
select(date,Universe, Daily_indexsum, Year_Month) %>% ungroup() %>%
unique.data.frame() %>%
#calculate the cumalative index returns
mutate(Returns = Daily_indexsum/lag(Daily_indexsum) - 1) %>%
mutate(Returns = coalesce(Returns, 0)) %>%
mutate(Cum_Return = cumprod(1 + Returns))
View(jalsh_ret)
View(Tidydata)
load_pkg("PerformanceAnalytics")
60sd <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME %in% "Materials")
60sd <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials")
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials")
View(SD)
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials") %>%
group_by(Universe, date) %>%
mutate(Daily_sum = sum(TRI))
View(SD)
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials") %>%
group_by(Universe, date) %>%
mutate(Daily_sum = sum(TRI)) %>%
arrange(date)
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials") %>%
group_by(Universe, date) %>%
mutate(Daily_sum = sum(TRI)) %>%
select(date, Universe, Daily_sum) %>%
unique.data.frame()
View(SD)
rmsfuns::load_pkg("tbl2xts")
tbl_xts(SD)
chart.RollingPerformance(R = SD,FUN = "sd", width = 60, main = "Rolling 60 day Standard Deviation",
legend.loc = "bottomleft")
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials") %>%
group_by(Universe, date) %>%
mutate(Daily_sum = sum(TRI)) %>%
select(date, Universe, Daily_sum) %>%
unique.data.frame() %>% ungroup()
rmsfuns::load_pkg("tbl2xts")
SD_xts <- tbl_xts(SD)
chart.RollingPerformance(R = SD_xts,FUN = "sd", width = 60, main = "Rolling 60 day Standard Deviation",
legend.loc = "bottomleft")
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials") %>%
group_by(Universe, date) %>%
mutate(Daily_sum = sum(TRI)) %>%
select(date, Universe, Daily_sum) %>%
unique.data.frame() %>% ungroup() %>% group_by(Universe)
rmsfuns::load_pkg("tbl2xts")
SD_xts <- tbl_xts(SD)
chart.RollingPerformance(R = SD_xts,FUN = "sd", width = 60, main = "Rolling 60 day Standard Deviation",
legend.loc = "bottomleft", )
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials") %>%
group_by(Universe, date) %>%
mutate(Daily_sum = sum(TRI)) %>%
select(date, Universe, Daily_sum) %>%
unique.data.frame() %>% ungroup() %>% group_by(Universe)
rmsfuns::load_pkg("tbl2xts")
SD_xts <- tbl_xts(SD)
chart.RollingPerformance(R = SD_xts,FUN = "sd", width = 60, main = "Rolling 60 day Standard Deviation",
legend.loc = "bottomleft")
View(SD)
View(SD)
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials") %>%
group_by(Universe, date) %>%
mutate(Daily_sum = sum(TRI)) %>%
select(date, Universe, Daily_sum) %>%
unique.data.frame() %>% ungroup() %>%
rmsfuns::load_pkg("tbl2xts")
SD_xts <- tbl_xts(tblData = SD, spread_by = Universe)
chart.RollingPerformance(R = SD_xts,FUN = "sd", width = 60, main = "Rolling 60 day Standard Deviation",
legend.loc = "bottomleft")
SD <- Tidydata %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Materials") %>%
group_by(Universe, date) %>%
mutate(Daily_sum = sum(TRI)) %>%
select(date, Universe, Daily_sum) %>%
unique.data.frame() %>% ungroup()
rmsfuns::load_pkg("tbl2xts")
SD_xts <- tbl_xts(tblData = SD, spread_by = "Universe")
chart.RollingPerformance(R = SD_xts,FUN = "sd", width = 60, main = "Rolling 60 day Standard Deviation",
legend.loc = "bottomleft")
